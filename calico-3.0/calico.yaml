# Calico Version v3.0.1
# https://docs.projectcalico.org/v3.0/releases#v3.0.1
# This manifest includes the following component versions:
#   calico/node:v3.0.1
#   calico/cni:v2.0.0
#   calico/kube-controllers:v2.0.0

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://172.31.78.215:2379,https://172.31.78.216:2379,https://172.31.78.217:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
            "type": "calico",
            "etcd_endpoints": "__ETCD_ENDPOINTS__",
            "etcd_key_file": "__ETCD_KEY_FILE__",
            "etcd_cert_file": "__ETCD_CERT_FILE__",
            "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
            "log_level": "info",
            "mtu": 1500,
            "ipam": {
                "type": "calico-ipam"
            },
            "policy": {
                "type": "k8s",
                "k8s_api_root": "https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__",
                "k8s_auth_token": "__SERVICEACCOUNT_TOKEN__"
            },
            "kubernetes": {
                "kubeconfig": "__KUBECONFIG_FILEPATH__"
            }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }
  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"

---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHNhTFpXRndLSVRiMElFUno1THVseWJ5WHhsbGtRUnFGOFdNcytGdVc2UER6WG5rCkhxOTVNd0lGcE1UKzI1WjFuQXB2RWhjY2RFU0hiZzFtZjhkSGttdGRSZ3EvMkNENUpKaFgxWkJIOWwvQTVmVEUKaDFWV2dHd2E2UjRWSVRjSkVVNUtmRHc0WWJ2RnpTMnhqV3lkUHVJTzAwOG9EWmhxbDB1VTI5djVRVTdTVVdWMApVdVM1RVJrZ1Z4cCtqNlZEMVB1QWVVNzJuUmdtSGhJd3NZQWVqUXF0dnZCMmZlVGlTd0lvcm9yUE8zeUdlZ0pCClR6b05FdXJ3MzlZWlZqdmE2aWMxQmFmWmgrb2RFc05EZXJGM2VCRUNBMzltYmUvMjNITGYyWHQ3WEtVUWxwU3EKT1FjbnpyZFpTQmxsdmpTNUZiRHg5ODY3TlpoNzJWUFcvTXBYT1FJREFRQUJBb0lCQVFDVDFHMHZSTHdKSm1YawpOMWxycXJiT3F5UnVIWkV2dkx5NldTMC9TbFNzeXFxQVVqcVpwNTdYbEpWbDZTd3hXMEMwZi80QzBqVlRNdlFWCm9ObXVCaUx3ZmZDc2Vxb2Fyc3Nic0VFQ2ozODFlQmtaN0dPTTBxYTJjNisvMTZPWFJEcjJKK2UxWllQNUM1RWIKK3ZPbFhqWEQ0cE5zQzk2WjNkVElHR25vNlR3Q21MQy84Zks4bzFvamNwM2JJU0hzbk14WmRYbUg2b0owcW9qZgpGMjJGMVpIVUhCd0ZhTGs1RDJFdU53cEluaFgvdzlyTHNWSWM0dXBhWGpTZVJKU2lBZXpXVituU0sraDYzSUFTCktSeExkN1BsMUxLQVZDQU9tSm8xYXprWGdwMTJlQXk1aW9YZnJCVldSbXljVE40N3NIa2pZRnBvVFpxREhSazIKTVZEZCsxZEJBb0dCQU9CdVNsL1Rzakd4a1RRWTBWNEdiRmdtZXozbzgvMjE1M3ZodmZjcjNVSGJxTnNCRlgxeApCSXhPS3dUL1M5cFIydW9MRm1oK0tlVjU5WVB3MWhSdVJpemxRVWtqcmVZalo2VUU1OUt1ekkvU0U4QWowMVdxCll2bEIrRktTQlBwekNnNUpvSFpwVmpQeEtWSWFabE9tbEo5OS9iVGxGNzlHWHFOUGtNSHJEVjhkQW9HQkFPSzgKYWNuUTFENnYwemE3elNVVi9nYXdHL0g4UW5aN0YySHZBMEJIeWdhRGpPUlJqRHlXRmZZU09oSDVzNUQ3WlVJdAoycnhidUZGMmFvNzNaY1lOb3g1bHIwWm14SmdIYnNTSkY2UUpFdHNaQTBrSVZTVzg3ZWNubk5ONmRGQS92SHN6Cm1YYzRFNnV2aGoxSTFmNzk1VWVhb2pZb1ZWd0hJd0hES3VVV1lWSE5Bb0dCQUtXQWo3WTAvZDVwaktPM2ZZWHkKQktuSXp1OXJ2Nm9rSDYyYVhpVk5JcC96WllVRE9wN0Qzays5UVRveExmVzBrVlF3a3ZqQnVSR3hxMXorR0ZEKwp0UjljZkpWOEN6eUFkV2thd2YzNnkzMXZ0UUxuS0d5dTlzZkxYMTA4c3hFaURwTlV0bEU4QXNiUkcrQ2crVDdNCnhDTU5uUzl1RmVJRytibEM3b1FpV3p6OUFvR0FIR3JzLzJSekZhQkg0clpMRWZqZHE4enEwN3VBUVFWUWV1L1EKQW9CODY3QVZPcENWK1FuK21xYlNMR3FWZlBobFNwUWd0RGJ5dFJNWWErN0tETGFzMlNSNWdXTmtCSUg1K2h3TQpvSHlhcG1kT0tCc3BRTitiR2J1M1JqSTAzZEgvTjVuU0JFVTlBZW12ODRKcmY5Z21vb0RaRDl5aVJqU0d5TFBECmJvOE5oNGtDZ1lBdGdabnZoWWhRekpOQmZlQzBTVUlCdnErN2dRbVlXSDBXQ3FOQVlPa1ZFNi9lNTIvbExzRTYKdjF3RFZWbFU1SFduNDhGSWRpOFhoam9pSDdRS3RXazlib2NGZmZaN0RUb1ZUemxlQ3oxNisvOWVoZUdPOGY3SQpxTDcyUkZKcUpqZGRrdUV3NWJzbURleGw3bnpyWUhpOGllcnU2WjJwY0tlMWJ4VnBHb2NFY3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5akNDQXQ2Z0F3SUJBZ0lVWVNOcWRmQlZEYjFkMlpMNUtZTCs2RGV2d2tvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURReE56QXlNVEl3TUZvWERUSTRNRFF4TkRBeU1USXdNRm93WHpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUTB3Q3dZRFZRUURFd1JsZEdOa01JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhzYUxaV0Z3S0lUYjBJRVJ6NUx1bHlieVh4bGwKa1FScUY4V01zK0Z1VzZQRHpYbmtIcTk1TXdJRnBNVCsyNVoxbkFwdkVoY2NkRVNIYmcxbWY4ZEhrbXRkUmdxLwoyQ0Q1SkpoWDFaQkg5bC9BNWZURWgxVldnR3dhNlI0VklUY0pFVTVLZkR3NFlidkZ6UzJ4ald5ZFB1SU8wMDhvCkRaaHFsMHVVMjl2NVFVN1NVV1YwVXVTNUVSa2dWeHArajZWRDFQdUFlVTcyblJnbUhoSXdzWUFlalFxdHZ2QjIKZmVUaVN3SW9yb3JQTzN5R2VnSkJUem9ORXVydzM5WVpWanZhNmljMUJhZlpoK29kRXNORGVyRjNlQkVDQTM5bQpiZS8yM0hMZjJYdDdYS1VRbHBTcU9RY256cmRaU0JsbHZqUzVGYkR4OTg2N05aaDcyVlBXL01wWE9RSURBUUFCCm80R2pNSUdnTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUZzQS9Fc1lWdVorL2xoQnhIS0lmaVlFOAphL1V3SHdZRFZSMGpCQmd3Rm9BVVhkMVFkNCtkTWVwNEhyQzF6aHhoMkdqNnpFQXdJUVlEVlIwUkJCb3dHSWNFCmZ3QUFBWWNFckI5TzE0Y0VyQjlPMkljRXJCOU8yVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZTRkQmFjT1MKcW5GZG5lRTZ3TzRQN0lHRHFoSjdFdlVJeEhZUXZyMWEzODVRaEFYMVNlRmtMcHhFaDh1aEx5enR2a3J4MVFZawpxaFl1dG9OWlpGZUtBM2IwbTd0cVFkeUJ6b0s2MVJ3bnYvV3dMNjgvbDJWK3A2dkJyamx0OExQb2VGcjBGYm41Ck1NbzNxMnV0UFB4NGp5eVRCMWJUQmJUTjgrZVBUSUZmWjRub0FSNWtkU2xVcmdHYmEwZmtWSndJSElQZ2FWbzkKZDlkMDNJcEloSUFMU2F6dzdpOGJwZ3dMSkNrR0FnK2RUdzNhZ2lqdzM2VmUrVjczcFlCWG1YLytqQzRHYXFlcgpHWHk2T3ZBVy9VMlRsbHRyTllTYXJzY3pGMWZJMGxwVlgveUhSZ2hwaXdYVHVrQytkNWdOY0xQU0FsYlRxUlF5Ckg0emhQUE5hcm5adjd3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVR1NFNWkveW9nY0x0VHdvMWNOWEFtbXJvOENRd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURReE56QXlNRFV3TUZvWERUSXpNRFF4TmpBeU1EVXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdXNETGFQd1NCd3FkaTZhbG5wc2IKRUdpQWFxVGVIZzU4OTJpWjRRb2RlcWxHMitEQlRobW1SeWVEclZqY1BJN2FQcHE1V1psZmFPUGcyZE9MMzJSMwpqb1VUKzJLTjFvdGdDOXY1V3NuT3ZEbWorRG9QQUlscHg4aGN3Y09sSE5acjA4eHF4ZlRxcTdqN1JhdVJnbUp3ClBxUHBPQ0piRVhNT3MrYk83R0lxK1JJczJNZGhsOFVhSFVpOEpmZGxBVjhKQ1QrdUt3ZFpMbDJRNC9mQysxUFYKMjdsaDJaZ3pQODVRZHRLTnlHTjNXL01USEdHeFZmZE11dmVzeG45NlNvdWc5UVF4NTFKY0RsZmJaWTJIU3FMRAo5YldKYkVVK25QOWJEekJJbVZEckhEYnQ5UmxkVnZrZFpqRWxNYVF2ZEhUZC96c3pEc1VSaDhCcllvc1hGUkdyCjZ3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVWGQxUWQ0K2RNZXA0SHJDMXpoeGgyR2o2ekVBd0h3WURWUjBqQkJnd0ZvQVVYZDFRZDQrZApNZXA0SHJDMXpoeGgyR2o2ekVBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEc2Zla2RCL01jNW1MWG1sTFhCCk8yblJOcDRIbUl4T3JyeXE5WTdLVytXcnRwdU41UThVNG82WFBHVmlpUG9jTUdjMjZ0TUNTc0ZxSXd4WW1SN0IKMUhHQWsxaHFKaEE2ZlVwaUpXTVJJOGRkeHRISnJrNFlZdGowblUxL01naFdrRmNVT2VuRTFTM0tqYkp2OUtORQpFNEp2RmJaaWhIb3gvbXpBK0V2M3NRdkNDWngwWHpsUlJFZVZTNUpUcW5GaXRxaVZKWS92dTdVa0o1UlpyL0xlCjJjS3JWRUJXcDMyeWZSTUF3ZGpIUUFyZkpRcmEvd3ZOdE04amROUmJabXNkb2tWUTk5ZzVjcnZhc3crMUFxZmkKQWc3VnIvK2VUUklpbGtaUkpkd3o5ZFg5VnMrbXFqYVVSQlZJMkxPc2xGd2FSMGxiVkdCVHM4ZWhiaHZnekpSVQppblk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K 

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        scheduler.alpha.kubernetes.io/tolerations: |
          [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
           {"key":"CriticalAddonsOnly", "operator":"Exists"}]
    spec:
      hostNetwork: true
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: quay.io/calico/node:v3.0.1
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # Configure the IP Pool from which Pod IPs will be chosen.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "Always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: "autodetect"
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: quay.io/calico/cni:v2.0.0
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
    scheduler.alpha.kubernetes.io/tolerations: |
      [{"key": "dedicated", "value": "master", "effect": "NoSchedule" },
       {"key":"CriticalAddonsOnly", "operator":"Exists"}]
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: quay.io/calico/kube-controllers:v2.0.0
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets.
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system

