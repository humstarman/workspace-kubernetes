# Calico Version v3.1.3
# https://docs.projectcalico.org/v3.1/releases#v3.1.3
# This manifest includes the following component versions:
#   calico/node:v3.1.3
#   calico/cni:v3.1.3
#   calico/kube-controllers:v3.1.3

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://192.168.100.161:2379,https://192.168.100.162:2379,https://192.168.100.163:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
          "type": "calico",
          "etcd_endpoints": "__ETCD_ENDPOINTS__",
          "etcd_key_file": "__ETCD_KEY_FILE__",
          "etcd_cert_file": "__ETCD_CERT_FILE__",
          "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
          "log_level": "info",
          "mtu": 1500,
          "ipam": {
              "type": "calico-ipam"
          },
          "policy": {
              "type": "k8s"
          },
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__"
          }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  #etcd_ca: ""   # "/calico-secrets/etcd-ca"
  #etcd_cert: "" # "/calico-secrets/etcd-cert"
  #etcd_key: ""  # "/calico-secrets/etcd-key"
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"


---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcDlwbVIvYSt3aGJGcUJTNmpuS1AyZHIva2FnK1pOL3BwOStab1VEUmhvTjR3dHhtCmJIWDFzQ0hoNy9pRGxzcldzNnlDNXdmUmpUd0g3dXRHRjg0V0NqeGZBK2pTanFoc3BLV0hiN0N4YnZ5cHE1UFYKQ2g5aHZtcGJsbDZmeWFuYlN1bk1uMElyN2N0NzlXOG9pUTZiSldyRFJPSnFxYzdIeVRqbnFBb2NLd3pZY2F5eQpwNVhvNHJTODRXSzVtUk1NZzRYTi9NWHNjRHpoSGdhdVFNRE81dldVa0pTaGQySGhmTWtnT2I2SDBaYUJkaWNjCld2WTFSY0MvbHhHSHk2dzFnWTdwZnNubERuOVJBL0hHUHh1bUxSOUplRHA4NFZjZ29aR2JxTlhvR3NHbGFiSEYKdndVdHcxNnExdHIxM1drcnZTWWlud2dib096SVJ2RXdaWmZjbVFJREFRQUJBb0lCQVFDWW1wQUk5MFVBOG5FcgpXZ1V1UXV1VDFtNHFQL3JSL1Z6U0doRHpzUm1OSVBSbXZMaUYvVXlzb0hGb21ka1EvRUxzd1hlVmtkOHJkNXVDCjFQWTU2RXpUYTRXNjZTNmRNblRyeis1dFZnaEs3bjFYbDZURmVqaUVSUEFWcXR1OUhhZFkyVzBHa2NPY2d6YWsKc2pYNVBZVkNKR2w1dEJ2alhETDVON290WlZ1c3FweWxGcGcxWEd4aGlVV1FBSnpMM1JyU25kbGFmWEo5N1kycAovT25FWTM5dmdreC82RGgxRzU0ZjNJU1RDRHNMRXRmSHpmRUJpT09lbzhZcjZvNUcvdXhiU0E4dStGMUVNOUtiClUwOWFQa3JxazBrRW9xdUhkd2sxTklMcStYL3M5c3RWVkpGOEkvSEhpaHE5M2NJSnlDUm13ckQ3L2NBTzhLMlgKUlBjQkE2N3hBb0dCQU5vNlJVZ3lJNWlPN3hhdHZxZFV0QkdzWG5LNEZ5QVptRjJ5Sk9XUyt5MStlMkVwQnVtQgpHU0EzQWlmbDNmNlc4VHNnRFZiL3ArT2RYejl4RmpHQ09DaHZqWEdRZEVUc3FPZEd5Q1BURlF1TkZvZEZTUG1uCmFCZjlBaUlPMEpDN1A0bHFNWHBLS1hFK3ZNcllZVXVZdGpaeUE1UDN6aWo2ald3a0tkR0xWcVkxQW9HQkFNVG8KQlRJcWRmaWlvY3h2Y3FRREI2UXhqZGlVVU1UT0ZmMmU5T1JBcTB3L0lneUZJZEJsSGZwTmVEUkhiazdwTitMQwo4emtweU53TkNLNytwdzBlZGg3WEF6dDdwMHdVd1JYOWlKZnBDT2dBZWoxL0xaUE5QZlplWDZNT2h5dCt0TjhlCnVYVGdVajFBdkJ1OTN0cGc2TWFUNkwraGRpaS9zV3p6NDI0U0tabFZBb0dBSzZDbXBTNVE2M2ozMTRMWXNMOUEKV0tBckthZ2dCMnpXaHpUTUo1Rmc0ZEY5ZlFra3RwMzJsZmdwV0N5ZVd2MTJNS25Sd09qUGViUEdqUHBndzNrVApIUkpnSnFvSWRKY1RsVmtUUGdZL0dOWVdBT2tiRTc0aUUxbWppWWVJcnNhZ2h5cFJ4ZTc1cGdneTJpSzBJTmJnCjVyV1lmWVozRXI0MGM4QXZGQk5WT1ZrQ2dZQUxSZDFHU2ZnSERBaUhVN29VZWJmdVJvZ0FaajFaaHhMck9qWjYKK3RqVHZLbU9YZkRacFhCWjdDVjltTGxQK3pvZjJWbGpaR2tEY0J1WEtTMFhLeTlJQkxkQ3FJbWphV3pFZllkYwpheEwvZFVlS1RjV21PSkhia1B1WXNqUTY0VDRwcC9DbUtGR05BQy9FeHRJRFhwajFCWExGeGRDbDlKT0wwVXFyCitvNDNJUUtCZ0ZpZ3V5UjNlK2d6bUlSQzJJK1RMRGsyQ1FmUU1Ta0xxa0g1R3p0TUE3Q3cxSXdMcjREdnlXOXIKcWFQT2plTDhBRU1WVnBXZ0dCTDRldUljWVVXaE5RMVFzWEplSTQ0TEJmeW1mS1MyYlNOeW13RGplb0tqQjlQVgo2M01BWC80eGJkdmhKbVlhWjFiMW5NelJTMXlFMFhTVG5CSTJvV0lPK3ZleXFDUFZ4aXVrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5akNDQXQ2Z0F3SUJBZ0lVWTRaQm5POHpPWUVGZytIcVU2S0FaZEhCNzY0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TVRFeU1qQXpOVFl3TUZvWERUSXhNVEV5TVRBek5UWXdNRm93WHpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUTB3Q3dZRFZRUURFd1JsZEdOa01JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXA5cG1SL2Erd2hiRnFCUzZqbktQMmRyL2thZysKWk4vcHA5K1pvVURSaG9ONHd0eG1iSFgxc0NIaDcvaURsc3JXczZ5QzV3ZlJqVHdIN3V0R0Y4NFdDanhmQStqUwpqcWhzcEtXSGI3Q3hidnlwcTVQVkNoOWh2bXBibGw2ZnlhbmJTdW5NbjBJcjdjdDc5VzhvaVE2YkpXckRST0pxCnFjN0h5VGpucUFvY0t3elljYXl5cDVYbzRyUzg0V0s1bVJNTWc0WE4vTVhzY0R6aEhnYXVRTURPNXZXVWtKU2gKZDJIaGZNa2dPYjZIMFphQmRpY2NXdlkxUmNDL2x4R0h5NncxZ1k3cGZzbmxEbjlSQS9IR1B4dW1MUjlKZURwOAo0VmNnb1pHYnFOWG9Hc0dsYWJIRnZ3VXR3MTZxMXRyMTNXa3J2U1lpbndnYm9PeklSdkV3WlpmY21RSURBUUFCCm80R2pNSUdnTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVW1XSDJhQ3ZzWXBDMnZkZEtPeWlGbGxVWQoxcE13SHdZRFZSMGpCQmd3Rm9BVVZVUlRCeFpvZ2RxYS9MVjd2c2p1dEtvb0F2TXdJUVlEVlIwUkJCb3dHSWNFCmZ3QUFBWWNFd0toa29ZY0V3S2hrb29jRXdLaGtvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBamcyS1pBVEoKTGpiU1ZvQUhKM0IvYWE0Zi8yQzVGTktVUkhYTzZHRUl2ejA4TWdLZlRUaE1nMy9QTmNDSlM0NHIyZnBOODZGQQpadHdnMWtKRUJtSmQ0ZnJkeTdxa0pRUGY4RC9oVVE4akxkWmZYYlZkeUpzUXlndTdiamUvSEZhaG5Qblp5N1RkClgrVk80dElVb0ZmMUR0bDBMV0JzL0YzNGFxQlFiZy9YUTZGL1h3S1hRV0ZRSG5ZL0V0d1NtZDlnYlNLdmZjM1YKTm9QQjhTeEZEUFg1Z3J1Y1ZKTDdOSm1sRXZINkljZFN6dHhCOWIrKzAxK1BVSkt1U0dQMkM0ZXNzdEgzeFBYcwpwa200MU1sQ3lYN1pIMmE4dzBtL2xleWhycDFKL2Q5Sk9HR3BkVTNDNXpqMmpYMW5ITkM5UCt1V1lpRiszb2NrCnNHVzdXUHVhbnZtVU53PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVQnVKdk96SVlsN0FIZFZWNm1lQ0RJUUtrMUlzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TVRFeU1qQXpOVFl3TUZvWERUSXpNVEV5TVRBek5UWXdNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeG90SStqdG8wWnA3b01TeHNzaVYKS3ZyVCtJeXQ5cmx1Ym55cjBsQm42bXNhWmxrVkNGenF1UHhObndkdmhEVTZOc2xMNnpockJrUmJrVnBxK0M4cwpCZTJVN1REU1hvbHpYditCOWZtUUR5eW5JRFo3eGtLOEZicXY1SE9Sa2VSZEt1S0NmZ1JUald1VkxVMWZlbllLClVBdS9VazFCaWltTE9BaWRXbzgwQVluYWlIVytqTTBDT0hhVkdTeDNHcURBQzdQaXI4T2x1NGI5UnZrNlA3TnMKTXlUQlhzdTBlL0hxMDE0b3A0czFFZUNFb1Jvb2xDVTVRVVhHSXdGUVZRMm9sQk9WcTBsVVBBU08wWUMvSENuWQpjcXhtK1doU2llT08vUGdFZVp3TnBzbjB6Q2pQZTBzaHljSE4xeUtzQkpuUzFYRzdVbklwVExHT3VJRTkvdlYzCmx3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVVlVSVEJ4Wm9nZHFhL0xWN3ZzanV0S29vQXZNd0h3WURWUjBqQkJnd0ZvQVVWVVJUQnhabwpnZHFhL0xWN3ZzanV0S29vQXZNd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFSkpqRjAxcDdDMXRJS1RSY3VxCi9YU0g4S3RML2tJdUp6ajBZYjI0c2xLWmRNUStiZUtlVVdCZTFjRWM2Y0FvbHRKR2IwbDNURUVSeDJOWi81OGIKRWtxNVNIRG54RmRha25FTng4NDJMZG1UZHNQYWt6MmZiN3o5bXlkekNBamwzc2s4M1MyVktQS1N3dTAvU2ZobwpWNUZFZVA1TGF3WUxCdWVBWmY5VzBMNzgya0FjZmRNQzF3MkcyaEI4Zks5am45ZGdzK0FJTkp5MkpubHhJWDJxCmxqWUR4YnE2QitxN2hORDh2QUNoa0JqQy8zanlrcEpWMmxBbHozN3RkL3R4cnZuN1BQVDdwOEV0TW5NMGRydVMKS2tRb3F3QzdWUUZRMEZ0UDZkRHB5RUtIVG5HYnlRTzNGc2FtS1pEa24zV2pabkpUbzB2ekEvR2R4aWoycFdQNwpPUVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K 

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      tolerations:
        # Make sure calico/node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: lowyard/calico-node:v3.1.3
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # The default IPv4 pool to create on startup if none exists. Pod IPs will be
            # chosen from this range. Changing this value after installation will have
            # no effect. This should fall within `--cluster-cidr`.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "Always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: "autodetect"
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /var/lib/calico
              name: var-lib-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: lowyard/calico-cni:v3.1.3
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - name: var-lib-calico
          hostPath:
            path: /var/lib/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets with mode 400.
        # See https://kubernetes.io/docs/concepts/configuration/secret/
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets
            defaultMode: 0400

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      tolerations:
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: lowyard/calico-kube-controllers:v3.1.3
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets with mode 400.
        # See https://kubernetes.io/docs/concepts/configuration/secret/
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets
            defaultMode: 0400

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
