# Calico Version v3.1.3
# https://docs.projectcalico.org/v3.1/releases#v3.1.3
# This manifest includes the following component versions:
#   calico/node:v3.1.3
#   calico/cni:v3.1.3
#   calico/kube-controllers:v3.1.3

# This ConfigMap is used to configure a self-hosted Calico installation.
kind: ConfigMap
apiVersion: v1
metadata:
  name: calico-config
  namespace: kube-system
data:
  # Configure this with the location of your etcd cluster.
  etcd_endpoints: "https://192.168.100.161:2379,https://192.168.100.162:2379,https://192.168.100.163:2379"

  # Configure the Calico backend to use.
  calico_backend: "bird"

  # The CNI network configuration to install on each node.
  cni_network_config: |-
    {
      "name": "k8s-pod-network",
      "cniVersion": "0.3.0",
      "plugins": [
        {
          "type": "calico",
          "etcd_endpoints": "__ETCD_ENDPOINTS__",
          "etcd_key_file": "__ETCD_KEY_FILE__",
          "etcd_cert_file": "__ETCD_CERT_FILE__",
          "etcd_ca_cert_file": "__ETCD_CA_CERT_FILE__",
          "log_level": "info",
          "mtu": 1500,
          "ipam": {
              "type": "calico-ipam"
          },
          "policy": {
              "type": "k8s"
          },
          "kubernetes": {
              "kubeconfig": "__KUBECONFIG_FILEPATH__"
          }
        },
        {
          "type": "portmap",
          "snat": true,
          "capabilities": {"portMappings": true}
        }
      ]
    }

  # If you're using TLS enabled etcd uncomment the following.
  # You must also populate the Secret below with these files.
  #etcd_ca: ""   # "/calico-secrets/etcd-ca"
  #etcd_cert: "" # "/calico-secrets/etcd-cert"
  #etcd_key: ""  # "/calico-secrets/etcd-key"
  etcd_ca: "/calico-secrets/etcd-ca"
  etcd_cert: "/calico-secrets/etcd-cert"
  etcd_key: "/calico-secrets/etcd-key"


---

# The following contains k8s Secrets for use with a TLS enabled etcd cluster.
# For information on populating Secrets, see http://kubernetes.io/docs/user-guide/secrets/
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: calico-etcd-secrets
  namespace: kube-system
data:
  # Populate the following files with etcd TLS configuration if desired, but leave blank if
  # not using TLS for etcd.
  # This self-hosted install expects three files with the following names.  The values
  # should be base64 encoded strings of the entire contents of each file.
  # etcd-key: null
  # etcd-cert: null
  # etcd-ca: null
  etcd-key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdko1REw2RHVMS3F4cFdpNml6MHZqTUcrcTVybmU0b2ZUbCtIWlNBK0t1VnppR3JvCmR5Z1B3THVEdnFCZTYvOUd1OUM4Q1N2eTR2bW15cjFMaUtsL1V0TWFCQ0gzVTNhU0QwbTR3V2FzYVdrVkg5OWYKS3M1alhXMjBJT055dkRPODdYM1JYc21qeU93dzd4WU1nY3F5dWtmZng2WlZ1TmMvazRjZDl3ZVVkdDYyVVM0eQo3cGU1Y2VkT1R6N1Q5UXpaalFHUGRRTk45bG11Y2FhVnJZTm43bnNoblNZbVBxS3BVQjVpRkFLWGlGK1Rhakk0ClErOEZMTmgzN0xvaS9aSWJGRDlhOTlXMThqTno4US9xd0lkVkFydjcyNFJNbkg1bEhDOWhTQnJlVExTRm5lTDgKMG5pRlZIVFhNY1Z0c0ZzdGRzZ1Q1d1Y3SzQ5Tit6dS9PWFh2cXdJREFRQUJBb0lCQUJmNjF2ZmJNZXlqMXVuOApvcHJKTUo1b2syRWwxSUEwVXo2WGpwTWd3a2FaM1ZKZXBTZGhCSCt3VjFPSStBaHc4QUU0ekc4dUV6Y2dIa0J3ClNJWWJab0NWTGgyUVkrMU1pYzAveGlsd2NFTUdoUlVFUlFrZ0xDbllwS241d01DRW8yUmVOcHdpYnB4QXl3ZmEKZWNTV2pKcDZRTTBWTEpqUFpOblF0OUtNT0NmVWVNOVROQmpJS3RiK3ZqRnhYWnIzWkI5ZitNYmVBa3hLSStzSAp5djk3Tm1IMmRXbWhYK1c2eHpYZUNXYk8xSUs5cW5yM0xCVEw2d0FpZ3JheTdHRjdPSmVWYWFlUnJ6ZHRJbTJXClVWL2ppZkw5SWpCM1M4UTVGQ2x3bGtIbnFEaTQ2ZmR1amVCMllLYjIwck1QcHF1RTZGaU80dWdhQmgyb0toZkwKWkdBZFhrRUNnWUVBME9uRHFBN0lOTFNQdy9OY0FUbkdGdUs0MXA0UDBvRVZETDRkNS9WNXJnMGhQdjduVUtyagpGcVkwR0V4K2x1dlVrWDF5eHppMktycXJnWU9wRk9xNHA4UWJPVkE0eWZLZGorU3FJOGdyUVRrcmpCcUhJVjRUCjVxMW8rM2JjNkg5N1Rwb1V3VEIyb0VJN3FlbjBHOUY2VGdDd01RcUFHdlAzdTNEV2g1S3AvMk1DZ1lFQTV5RjgKWVhVZ0p2NHZNVisxb0JZeENRQnZEK05tdWZHQmxXQVlDa2plYUh3T1VqVlRqckVLQlc2anBMTDcrVEJ5ZzFHWgpBTlpnRUlVdHZEM2c2QlhQclhzM29teGxTUjlJYURSd245SDhwcE1sMktrNVFueVR4cjVFbi83SGEyZXNhWVFZCnl2Yk01QXY0dWZGWTB5L0NaZDVWOTRvbVRtZ1JRREwzMU5yNXRSa0NnWUFONzhwUnA4ckxXVkJON2lveEdyMlEKUVVlN2FZZjhyd2ZNZGRKZzZ3dFhCU0UycHFLZnl3YWpPQ3M1ZzhEZUtKVmhyMUM4NFplbGVoWis2VjJhTzU1ZAo4c011SzUvZU9RVXgyRHRSYjhVUzhORnE0MG9vZTdJd0xWbFhqVEpuZ0RtbG9Mbkp1WVh3WXZxLzl3K0YyNCtoCkxJS1VndkxRMlgycFQzbkFTWlIxcVFLQmdEdWdWT0VqZ1M3dUJpaTdvelJ3WlNnSVY1NkdzTHFwaGgrT0VjV2QKZE5zSm5md3hTNlFWSWh1eXBqN1grYzhZWTRKaks1Q2V2VnVscjkzUExOVlN3eWZqRU1BekxKSUhvdnRYQS9NSApEaUcrOWxXRm1vTC9kblFnSTc0TzBVMXhDbmFTSUg5RDJpbSt1T1RuVVYzeUJUbVllUjhLSWNXNmJURGR0VGZSCllmZ0pBb0dBVVRCN0Znd2dMVHcxNDM4ZVlYL3Q1bW1yNk0wcDFNTHgxWmMzSUVweG92L0U4WGZUc2hBaVpNbUoKb2p2Sm0xNEhyVjBVRXAranQrWjJmblpYUS9xVDAxNmh1OS8xcVZCMnRYL0p0RzV3VElYeVc0cmx4Zk9tMTJaOQphcVY5eHdCQk13OGV2L3Ezbldwb0RSb2crUmdVTFVnditYR3k5UTIvUWYrenIwNHdDOG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  etcd-cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ5akNDQXQ2Z0F3SUJBZ0lVU3NKRmo3d0ZXQVhyMVhlWnhhVlh6MWdmbml3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURjd09UQTNNVGd3TUZvWERURTVNRGN3T1RBM01UZ3dNRm93WHpFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUTB3Q3dZRFZRUURFd1JsZEdOa01JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZKNURMNkR1TEtxeHBXaTZpejB2ak1HK3E1cm4KZTRvZlRsK0haU0ErS3VWemlHcm9keWdQd0x1RHZxQmU2LzlHdTlDOENTdnk0dm1teXIxTGlLbC9VdE1hQkNIMwpVM2FTRDBtNHdXYXNhV2tWSDk5ZktzNWpYVzIwSU9OeXZETzg3WDNSWHNtanlPd3c3eFlNZ2NxeXVrZmZ4NlpWCnVOYy9rNGNkOXdlVWR0NjJVUzR5N3BlNWNlZE9UejdUOVF6WmpRR1BkUU5OOWxtdWNhYVZyWU5uN25zaG5TWW0KUHFLcFVCNWlGQUtYaUYrVGFqSTRRKzhGTE5oMzdMb2kvWkliRkQ5YTk5VzE4ak56OFEvcXdJZFZBcnY3MjRSTQpuSDVsSEM5aFNCcmVUTFNGbmVMODBuaUZWSFRYTWNWdHNGc3Rkc2dUNXdWN0s0OU4renUvT1hYdnF3SURBUUFCCm80R2pNSUdnTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUlPdGZxWVNiZnRHd2pBTG1taDNhOVFXdQpFajB3SHdZRFZSMGpCQmd3Rm9BVUhvaXNzUkorbkVGczhBYVVzYWRuOHp1a3Zhb3dJUVlEVlIwUkJCb3dHSWNFCmZ3QUFBWWNFd0toa29ZY0V3S2hrb29jRXdLaGtvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSEgydGJrTHMKNGJzbmRkbjczSTRrNGJKQ1lWWlFTYnpkSkNLd3NWa3JVMldpNlhGRmIxbGE4aFFDL3hNemNuM3l3TTVlRGg1TQoyY1oyWHVOc3VHWXlWTGlnQzdUdzU3Qzdja3dHQmRtYkx0QnJYLzY4aVFUanhKejRjSGZxNUZ3OURrWGRvRC9xCklQaDRPUzgzcXlDVzdPYXFvRXQxVEY4eUxld3F5ODFaV1J3MWhXTm1CWm1GYXBoc2h6R2JVd0pVV2tXSFJ4c1cKdXBxUnNxQVlZYjdSRldDU3A1N29Vd3BodTdFSHlEZEtIa2pKbkIxOFdRUjZqcFJnakZ5Q1ViZXhEWjU2U0tYQgpwT25iaitLeEhIVXVjYmxiVWJ2YlhxR0NzRXk2K05nQW9Fb042eEt5L1JDMGZ3Z2pucngzaXFPTkNYMG9qWnkrCjd5TGlDd0dZa3g0cFB3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  etcd-ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUR2akNDQXFhZ0F3SUJBZ0lVRGMzenM5ZWdBYzZvcnR6ckJ2Q3NxVUtLOW5Jd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pURUxNQWtHQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbAphVXBwYm1jeEREQUtCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByCmRXSmxjbTVsZEdWek1CNFhEVEU0TURjd09UQTNNVGN3TUZvWERUSXpNRGN3T0RBM01UY3dNRm93WlRFTE1Ba0cKQTFVRUJoTUNRMDR4RURBT0JnTlZCQWdUQjBKbGFVcHBibWN4RURBT0JnTlZCQWNUQjBKbGFVcHBibWN4RERBSwpCZ05WQkFvVEEyczRjekVQTUEwR0ExVUVDeE1HVTNsemRHVnRNUk13RVFZRFZRUURFd3ByZFdKbGNtNWxkR1Z6Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBblhRbjZDY0ZhbkZsREhEV2pxVm0KcXppM1YwTU90V3FTdDByS0s3RGRKSW41MlEzNU1lc1paWm55MERSNEhMRGVLbUJTTE56aW1STjFMcVpDUmJ3eAo2dm5XeTg3Q0RQUHB3SXRzUHVpbExOVVEzNkhlTmVmbVlzNTBCMjFKN0JUSDh3RmVXWXY3c09xK0FpZXNYMk80CnN4UjhoQTB4ak9kb3dObG44YXRaTm9oZjZJRndrSkhhOTN1RUJ0ZVlUZGJmUEpWTVJua2tqcEcrOGE3QUhOZ0gKN2FWUVBjdlpRbVBjRktTUnhoQ1ZFK0NVMG9FcGc4UWVCbG13Vk9TOXV4R2FkZVBTVEFxODV0dFpOTGdUL2hhSwpRb2JtcHVBeWxXOE9RME1QSWh4SEt6NTBxOEgxZFhpKzVCZkVnQVRFbVpNSjBhOTNZcWZuc2tIR3NwN2tBU0Y5ClZ3SURBUUFCbzJZd1pEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFqQWQKQmdOVkhRNEVGZ1FVSG9pc3NSSituRUZzOEFhVXNhZG44enVrdmFvd0h3WURWUjBqQkJnd0ZvQVVIb2lzc1JKKwpuRUZzOEFhVXNhZG44enVrdmFvd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIajhUSFZBM2JkNUJQbmRQOGRHCm1ESHFpYVgxM0E1endCRFJuNGZuUi9pSDhybkFNNllVb3l2Nmg5c3BpY1BOcTYyQm9EN3FHSmZMZGp1QjIxdmkKMC9VOXJzSCtaZVdpM3U0NjdFeGcyNm5VZEVqcU9OaWZIbXgyejNHZ3VFRzZCcmRaZ2JLOEhiNGh2QXdlc0FQZQprZjd4Z0VVdUpWVkRCeC9UTjV6dGhlajlDUWVDUkhQM1NsMVZHa0JwSmhlVTJuR3EzTEtVcW5nSHZxNk5jT1JsCmxvVy9NekZxNDVWRmgrb2NmYnVsTE1BbDc1d0dCVzZhWGNBYTNNalJrcEVJRFY3bHVGanhnMmtUb3cwaUJQaWIKYkpUTWJBZ1ZlUkpMMjVaWkhxUWQyWC9WMXF4NzJ3OUR5ZEV1NWRjeG5PNXBuZTUyUDRGTjZLOWl5Slpva2FOOQpvKzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K 

---

# This manifest installs the calico/node container, as well
# as the Calico CNI plugins and network config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: calico-node
  namespace: kube-system
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      tolerations:
        # Make sure calico/node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      serviceAccountName: calico-node
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 0
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: lowyard/calico-node:v3.1.3
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Choose the backend to use.
            - name: CALICO_NETWORKING_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: calico_backend
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: "k8s,bgp"
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: "true"
            # Set noderef for node controller.
            - name: CALICO_K8S_NODE_REF
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: "ACCEPT"
            # The default IPv4 pool to create on startup if none exists. Pod IPs will be
            # chosen from this range. Changing this value after installation will have
            # no effect. This should fall within `--cluster-cidr`.
            - name: CALICO_IPV4POOL_CIDR
              value: "172.30.0.0/16"
            - name: CALICO_IPV4POOL_IPIP
              value: "Always"
            # Disable IPv6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: "false"
            # Set Felix logging to "info"
            - name: FELIX_LOGSEVERITYSCREEN
              value: "info"
            # Set MTU for tunnel device used if ipip is enabled
            - name: FELIX_IPINIPMTU
              value: "1440"
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Auto-detect the BGP IP address.
            - name: IP
              value: "autodetect"
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 250m
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9099
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /var/lib/calico
              name: var-lib-calico
              readOnly: false
            - mountPath: /calico-secrets
              name: etcd-certs
        # This container installs the Calico CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
          image: lowyard/calico-cni:v3.1.3
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "10-calico.conflist"
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: cni_network_config
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Used by calico/node.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - name: var-lib-calico
          hostPath:
            path: /var/lib/calico
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        # Mount in the etcd TLS secrets with mode 400.
        # See https://kubernetes.io/docs/concepts/configuration/secret/
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets
            defaultMode: 0400

---

# This manifest deploys the Calico Kubernetes controllers.
# See https://github.com/projectcalico/kube-controllers
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: calico-kube-controllers
  namespace: kube-system
  labels:
    k8s-app: calico-kube-controllers
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
spec:
  # The controllers can only have a single active instance.
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      name: calico-kube-controllers
      namespace: kube-system
      labels:
        k8s-app: calico-kube-controllers
    spec:
      # The controllers must run in the host network namespace so that
      # it isn't governed by policy that would prevent it from working.
      hostNetwork: true
      tolerations:
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      serviceAccountName: calico-kube-controllers
      containers:
        - name: calico-kube-controllers
          image: lowyard/calico-kube-controllers:v3.1.3
          env:
            # The location of the Calico etcd cluster.
            - name: ETCD_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_endpoints
            # Location of the CA certificate for etcd.
            - name: ETCD_CA_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_ca
            # Location of the client key for etcd.
            - name: ETCD_KEY_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_key
            # Location of the client certificate for etcd.
            - name: ETCD_CERT_FILE
              valueFrom:
                configMapKeyRef:
                  name: calico-config
                  key: etcd_cert
            # Choose which controllers to run.
            - name: ENABLED_CONTROLLERS
              value: policy,profile,workloadendpoint,node
          volumeMounts:
            # Mount in the etcd TLS secrets.
            - mountPath: /calico-secrets
              name: etcd-certs
      volumes:
        # Mount in the etcd TLS secrets with mode 400.
        # See https://kubernetes.io/docs/concepts/configuration/secret/
        - name: etcd-certs
          secret:
            secretName: calico-etcd-secrets
            defaultMode: 0400

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-kube-controllers
  namespace: kube-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: calico-node
  namespace: kube-system
